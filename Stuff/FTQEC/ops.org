#+TITLE:  Encyclopedia of Stabilizer Code Operations
#+DATE:   Thu May 23 18:10:10 EEST 2024
#+SETUPFILE: ./org-mode-header.org
:SET_STUFF_UP:
#+INCLUDE: "~/Git/DOT_LaTeX/org-latex-export-defs.org"
#+STARTUP: overview
#+SEQ_TODO: TODO MORE ↘️ | REVIEW NEW
#+BEGIN_HTML
\(
\newcommand{\sodifjosidjfosidjfosijdfosijdfoisjdfoijsdofijsodifjosidjfosidj}{\mathscr{A}}
\newcommand{\viusbidufhwiefsdofijsoifjaoidsjfoiqhwoeufhaosudfhoauisdhfoaiwe}[1]{A #1}
\)
#+END_HTML
#+SETUPFILE: https://fniessen.github.io/org-html-themes/org/theme-readtheorg.setup
#+BEGIN_COMMENT
❗️ *WARNING!  GPLv3*
#+END_COMMENT
#+PROPERTY: header-args :eval never :exports code :noweb no-export :noweb-prefix no
:END:

* Lattice Surgery
** ↘️ Code
***** Shapes

      * Textbook shape d=7: 7×7 physical qubits
        #+BEGIN_EXAMPLE
         ∧ ∧ ∧
         XZXZXZ⟩
        ⟨ZXZXZX
         XZXZXZ⟩
        ⟨ZXZXZX
         XZXZXZ⟩
        ⟨ZXZXZX
          ∨ ∨ ∨
        #+END_EXAMPLE

      * (more)

***** MORE "Logical contributions" of physical qubit neighborhoods

      * In the bulk: 1-(1/4+1/4+1/4+1/4)                      = 0
        #+BEGIN_EXAMPLE
        Z X
         ⊙
        X Z
        #+END_EXAMPLE

      * On an edge: 1-(1/4+1/4+1/2)                           = 0
        #+BEGIN_EXAMPLE
        X
         ⊙
        Z ⟩
        #+END_EXAMPLE

      * Convex corner std Z-X: 1-(1/4+1/2)                    = 1/4
        #+BEGIN_EXAMPLE
        ∧   ∧
         ⋅ ⋅ ⊙
        Z X Z
         ⋅ ⋅ ⋅
        X Z X ⟩
        #+END_EXAMPLE

      * Convex corner weird 𝛔-𝛔:  1-(1/4+1/2+1/2)             = -1/4
        #+BEGIN_EXAMPLE
        ∧   ∧
         ⋅ ⋅ ⊙
        Z X Z ⟩
         ⋅ ⋅ ⋅
        X Z X
         ⋅ ⋅ ⋅
        Z X Z ⟩
        #+END_EXAMPLE

      * Convex corner obtuse 𝛔-𝛔 near:  3 − 2⋅(1/2+1/4+1/3) − (1/4+1/4+1/4+1/3)  = -1/4
        #+BEGIN_EXAMPLE
          ∧
         ⋅ ⊙
        Z X ◺
         ⋅ ⊙ ⊙
        X Z X ⟩
         ⋅ ⋅ ⋅
        Z X Z
        #+END_EXAMPLE

      * Convex corner obtuse 𝛔-𝛔 far:  3 − 2⋅(1/4+1/3) − (1/4+1/4+1/4+1/3)  = 3/4 = SHIT
        #+BEGIN_EXAMPLE
        ∧
         ⋅ ⊙
        Z X ◺
         ⋅ ⊙ ⊙
        X Z X
         ⋅ ⋅ ⋅
        Z X Z ⟩
        #+END_EXAMPLE

      * Convex corner obtuse Z-X:  3 − (1/2+1/4+1/3) − (1/4+1/3) − (1/4+1/4+1/4+1/3) = 1/4
        #+BEGIN_EXAMPLE
          ∧
         ⋅ ⊙
        Z X ◺
         ⋅ ⊙ ⊙
        X Z X
         ⋅ ⋅ ⋅
        Z X Z ⟩
        #+END_EXAMPLE

      * etc
      * etc


** TODO Memory
*** Syndrome measurement
*** Decoding
*** Fixing


** ↘️ Shape changes & moves
***** TODO Expand
***** MORE Split

      * X-split = |++⟩⟨+| + |--⟩⟨-|  = (|00⟩+|11⟩)⟨0| + (|01⟩+|10⟩)⟨1|  ⫽√2
        + ZX-diagram
          #+BEGIN_EXAMPLE
             ╱
           ─X
             ╲
          #+END_EXAMPLE
        + Measurement pattern
          1. Center part of logical qubit, boundaries left and right, not shown, are Z; logX is vertical X's:
            #+BEGIN_EXAMPLE
            ∧   ∧   ∧
             ⋅ ⋅ ⋅ ⋅ ⋅
            Z X 𝗭 X Z
             ⋅ ⋅ ⋅ ⋅ ⋅
            X Z 𝗫 Z X
             ⋅ ⋅ ⋅ ⋅ ⋅
            Z X 𝗭 X Z
             ⋅ ⋅ ⋅ ⋅ ⋅
            X Z 𝗫 Z X
             ⋅ ⋅ ⋅ ⋅ ⋅
              ∨   ∨
            #+END_EXAMPLE
          2. Measure Z⊗Z (vertical) on the left of each of the bold 𝗭s (the pairs on the right are implied).
          3. Result: 𝛕 := tensor of all X's left and right of the removed stabilizer column; plus:
            #+BEGIN_EXAMPLE
            ∧        ∧
             ⋅ ⋅  ⋅ ⋅ ⋅
            Z X ⟩⟨ X Z
             ⋅ ⋅  ⋅ ⋅ ⋅
            X Z    Z X
             ⋅ ⋅  ⋅ ⋅ ⋅
            Z X ⟩⟨ X Z
             ⋅ ⋅  ⋅ ⋅ ⋅
            X Z    Z X
             ⋅ ⋅  ⋅ ⋅ ⋅
              ∨    ∨
            #+END_EXAMPLE
            So we have 2 logical qubits, but their logical X's are equivalent through 𝛕

      * Z-split = |00⟩⟨0| + |11⟩⟨1|
        + ZX-diagram
          #+BEGIN_EXAMPLE
             ╱
           ─Z
             ╲
          #+END_EXAMPLE

***** TODO Merge

      * Definitions (with ZX-diagrams)
        + Merges have a classical outcome, 𝖺, so they reduce the quantum degrees of freedom from 2 to 1
        + Z-merge = |0⟩⟨0𝖺| + |1⟩⟨1𝖺̅|
          #+BEGIN_EXAMPLE
          ───┐
             Z─
          ─Xₐ┘
          #+END_EXAMPLE
        + X-merge = |+⟩⟨+𝑎| + |-⟩⟨-𝑎̅|  where 𝑎 = (-1)ᵃ, and 𝑎̅ = -(-1)ᵃ
          #+BEGIN_EXAMPLE
          ───┐
             X─
          ─Zₐ┘
          #+END_EXAMPLE

***** REVIEW Full rotate

      * Meaning: Z-boundary and X-boundary are exchanged.
        + ... but what happens with logical Z,X — are they kept?

      * Htrans + Hvirt :: Possibly in parallel:
        + Apply H to each data qubit (transversal [[H-gate]])
        + Swap Z,X logical ops (virtual [[H-gate]])

***** TODO FoGi rotate

      From [fn:FoGiLS]

***** TODO etc


** ↘️ Operations
*** ↘️ State preparation
***** MORE ±Z, ±X

      * +𝛔 where 𝛔 ∈ {Z,X}:
        #+BEGIN_SRC python
          for q in dataqubits:
              q.init(+𝛔)
          EC(d times)
        #+END_SRC
        Cost:
        + 1 QEC cycle
          - ... that can be merged with next op[fn:river]
          - TODO :: how exactly?

      * TODO :: There's sure to be a shortcut for preparing -Z and -X

***** TODO ±Y

*** MORE Single qubit Clifford gates
***** REVIEW Pauli-{X,Z} gates

      * Transversal :: (Only if length of observable is odd)[fn:river]
        + Space-time cost: Time = 1 cycle
        + Error cost:
          - *Z*: with /virtual/ Z-gate: 0
          - *X*, *Z* w/o virtual Z-gate: loads of 1-qubit gates

      * Virtual P   :: Flip /frame/ of every physical qubit & *propagate*
        - ??? This doesn't look like it makes any sense...

      * Virtual L   :: Flip sign of logical op[fn:river]

***** Pauli-Y gate

      * Transversal :: (Only if lengths of Z,X observables are both odd)[fn:river]

      * Apply ➛Z➛X➛ or ➛X➛Z➛; e.g., ~X{virt}, Ztrans~
        - difference is global phase
        - can be done in parallel

***** REVIEW H-gate

      * Transversal :: (TODO explain)

      * Virtual :: Swap Z,X logical ops
        + I.e., say,
          - before: Z̅ between Z-boundaries, X̅  between X-boundaries;
          - after:  Z̅ between X-boundaries, X̅  between Z-boundaries.
        + Cf. [[Full rotate]]

*** ↘️ Single-qubit measurement
***** Z,X

      * Destructive :: Measure all data qubits.[fn:river:]

      * (Trivial) [[Split]] ::
        + ZX-diagram (for measuring Z):
          #+BEGIN_EXAMPLE
           +----------+
           |          |
          ────Z─────────
           |  │       |
           |  └─Xₐ─X₀ |
           +----------+
          #+END_EXAMPLE
          - The ~X₀~ measurement (⦨Z) in the diagram can be performed on a trivial "logical qubit" consisting of
            only one row or column of data qubits, e.g.:
            #+BEGIN_EXAMPLE
            ⋅
             ⟩
            ⋅

            ⋅
             ⟩
            ⋅

            ⋅
            #+END_EXAMPLE


        + Split off 1 column/row of weight-4 stabilizers (to measure 𝛔, do 𝛔 split)
        + ➾ each data qubit in single remaining column/row holds observable value up to sign
        + Careful: distance may decrease ([[Expand]] before?)
        + TODO :: how to handle error detecting info that arises?  (The product of every 2 consecutive data qubits
          in the row/column is a stabilizer known.)
            #+BEGIN_EXAMPLE
              ∧   ∧
             ⋅ ⋅ ⋅ ⋅
            X Z X Z
             ⋅ ⋅ ⋅ ⋅
            Z X Z X ⟩
             ⋅ ⋅ ⋅ ⋅
            X Z X Z
             ⋅ ⋅ ⋅ ⋅
            Z X Z X ⟩
             ⋅ ⋅ ⋅ ⋅
            ∨   ∨
            #+END_EXAMPLE

      * (Trivial) [[Merge]] ::
        + ZX-diagram (for measuring Z):
          #+BEGIN_EXAMPLE
           +----------+
           |          |
          ──────────Z───
           | X₀───Xₐ┘ |
           +----------+
          #+END_EXAMPLE
          - The ~X₀~ state preparation (i.e., |0⟩) can be a performed on a trivial logical qubit consisting of

*** 2-qubit ZZ,XX measurement
*** CNOT
***** Split + merge

      * Definition (via ZX-diagram)
        #+BEGIN_EXAMPLE
        ──Z──[fix]─
          │
          │
          Zₐ
          │
        ──X──
        #+END_EXAMPLE
        where 'fix' refers to fixing the effect of the measurement outcome "𝖺": a Z-gate has to be applied if that
        𝖺=1.  (Of course, applying the Z-gate can be done virtually.)  The vertical line in the ZX-diagram can be
        thought of as an auxiliary logical qubit.

***** Measure ZZ,XX


* Footnotes = Bibliography
  * Riverlane [fn:river: ~arXiv:2307.03233~ /Compilation of a simple chemistry application/ (Riverlane)]
  * Fowler-Gidney-LS [fn:FoGiLS: ~arXiv:1808.06709~ /Low overhead quantum computation using lattice surgery/ Fowler & Gidney]
** EOF
# Local Variables:
# fill-column: 115
# End:
