#+TITLE:  OSQ+100 @ UTartu ‚Äî Project Management
:SET_STUFF_UP:
#+AUTHOR: Dirk Oliver Theis, University of Tartu, Estonia
#+EMAIL:  dotheis.UTartu@gmail.com
#+DATE:   Tue Jun 11 12:19:44 CEST 2024
#+STARTUP: latexpreview
#+STARTUP: show2levels
#+SEQ_TODO: :::: NOW! NEXT ARGH ‚ÜòÔ∏è | DONE
#+COLUMNS: %70ITEM %TODO
#+BEGIN_COMMENT
Sparse tree showing all items that are not done: C-c / t
#+END_COMMENT
:END:

* Overview: UTartu's Jobs

      _Task 5.3 Software Stack_

      | Key  | Name                   | Dead     | Soon |
      |------+------------------------+----------+------|
      | D5.3 | Optimizing Compiler v1 | 2025 Feb |  ùó´   |
      |      | <62>                   |          | <c>  |


      _Task 7.3 Verification & Validation_

      | Key  | Name                                                           | Dead     | Soon |
      |------+----------------------------------------------------------------+----------+------|
      | O7.3 | Develop protocols, software for verif.+valid. of full QC stack |          |      |
      | M24  | Consensus of interface specifications for verification         | 2026 Feb |      |
      | D7.3 | Methodology for verifying the quantum stack                    | 2026 Aug |      |
      |      | <64>                                                           |          | <c>  |

      _Sub-Task 7.4.1_

      | Key  | Name                                           | Dead     | Soon |
      |------+------------------------------------------------+----------+------|
      | 741, | Make cuQuantum available; w/ noise models      |          |  ùó´   |
      | M19  | Circ-simu available used by at least 3 parners | 2025 Feb | ùó´ùó´ùó´  |
      |      | <62>                                           |          | <c>  |


      _Sub-Task 7.5.1_

      | Key  | Name                            | Dead     | Soon |
      |------+---------------------------------+----------+------|
      | 751a | Integrate qcirc-sim in HPC-APIs | 2026 Aug |      |
      | 751b | Develop qcirc-opt tools         | 2026 Aug |      |
      |      | <62>                            |          | <c>  |


* Work
** NEXT D5.3   /Optimizing Compiler v1/
   DEADLINE: <2025-02-28>
** :::: M24    /Consensus of interface specifications for verification/
   DEADLINE: <2026-02-28>
** :::: D7.3   /Methodology for verifying the quantum stack/
   DEADLINE: <2026-08-31>
** NOW! [1/3]Ô∏è T7.4.1 /cuQuantum/
   DEADLINE: <2025-02-28> (of D7.4.)

      #+BEGIN_QUOTE
      *UTartu* will *make the cuQuantum* or QuEST quantum-circuit simulator *available* to OpenSuperQPlus100
      partners and *add noise models from OpenSuperQPlus100 hardware*.
      #+END_QUOTE

      _Milestone 19:_ Software used by at least 3 OSQ partners

      * [X] Make cuQuantum run locally

      Todo: Make it "available":

      * [ ] Make a program which takes an OpenQASM file as input, and writes the output.
      * [ ] Make a Qiskit template for use.

** :::: T7.5.1 /HPC/
   DEADLINE: <2026-08-31> (of D7.5.)

      #+BEGIN_QUOTE
      *UTartu will integrate quantum-circuit simulator software with HPC APIs*. \\
      CHALMERS, *UTartu*, and Wigner RCP will develop *HPC circuit-optimization tools*.
      #+END_QUOTE


* Descriptions
** WP 5 /Enabling Software/
*** Task 5.3 /Software Stack/ -- Project Management
**** Task Outline
***** Task Description in GA

   #+BEGIN_QUOTE
      _Task 5.3: Software stack_

      (Partners involved: UTartu*, Wigner RCP, Qruise, TNO, FZJ; Duration: M1-M42)

      Once the QC is fully calibrated, we require an optimizing compiler to best match users‚Äô circuits to each
      hardware‚Äôs specific capabilities.  In addition, a Quantum OS is required, allowing lab members and trusted
      collaborators to submit circuits for execution (a.k.a. private cloud), and including everything needed for
      ongoing operations: a scheduler, recalibration and status monitoring.

      Creation of an *optimizing compiler* will be led by UTartu and be comprised of two steps.  In *Phase 1*
      (deliverable D5.3) WP5[fn:1] shall implement an optimizing compiler which would allow arbitrary quantum circuits to
      be executed on OpenSuperQPlus100 hardware.  Optimized mapping of circuit layout and gate-set.  In *Phase 2*,
      the Phase 1 compiler shall be extended to include /dynamic adaptation to newly calibrated gates and gate
      error rates/ as well as support for /integration of classical logic/ in the quantum circuit for error
      correction implementation.

      To allow efficient work by the various project partners, we must allow for shared usage of the QCs.  In other
      words ‚Äì we must provide for private *cloud access*.  This will comprise of a means of sending circuits to be
      evaluated, a circuit *queue*, and a mechanism to return results (milestone MS17).  Further, to allow certain
      maintenance operations of the QCs and to prevent interactive algorithms from going back to the end of the
      queue in each iteration, priorities shall be built into the queuing mechanism.

      It is imperative that QPUs keep operating at the lowest error rates.  For that purpose, *recalibration* shall
      be implemented, with the goal of minimizing QC downtime and maximizing fidelities throughout.  Finally, basic
      *monitoring* capabilities will be provided (deliverable D5.7), to allow QC operators to view system health
      and performance.
   #+END_QUOTE

[fn:1] I fixed a typo here: The GA says "WP4".
***** Components

    * Optimizing Compiler (UTartu)
      + Phase 1
      + Phase 2

    * Quantum OS (Qruise)
      + Cloud access
        - Scheduler
      + Recalibration
      + Monitoring

***** Relies on

    | Key | Name                                                                      | Respo. | Start |  Dead |
    |-----+---------------------------------------------------------------------------+--------+-------+-------|
    | M7  | User reqs, system specs & breakdown based on plans, interface defs agreed | Orange | 24-01 | 24-02 |
    | M9  | Interface [from WP4] to WP5 operational                                   | Orange | 24-04 | 24-05 |
    | M3  | Low-level interface phase 1 definition                                    | Qruise | 23-07 | 23-08 |
    | M17 | Low-level interface phase 2 definition                                    | Qruise | 25-01 | 25-02 |

****** Partners (in other tasks) that this task relies on

     | Partner | Main                     | Others |
     |         | Contacts                 |        |
     |---------+--------------------------+--------|
     | ZI      | lukas.sigl@zhinst.com    |        |
     |         | claudius.riek@zhinst.com |        |
     |         | moritz.kirste@zhinst.com |        |
     |---------+--------------------------+--------|
     | Orange  | Anna Shchygol (Task 6.3) |        |
     |         | anna@orangeqs.com        |        |
     |---------+--------------------------+--------|

***** Output

    | Key  | Name                                      |      Start |       Dead |
    |------+-------------------------------------------+------------+------------|
    | D5.3 | Optimizing Compiler v1                    | 2025-01-01 | 2025-02-28 |
    | D5.7 | Quantum OS ‚Äî Monitoring and recalibration | 2026-07-01 | 2026-08-31 |

***** Contributing partners

    UTartu has 2 PM in this WP, which amounts to *347.6 hours*.


    | Partner    | Total PMs | Main                          | Other                        |
    |            |    in WP5 | Contacts                      | Implementers                 |
    |------------+-----------+-------------------------------+------------------------------|
    | _UTartu_   |       2.0 | dotheis.UTartu@gmail.com      | todo                         |
    |------------+-----------+-------------------------------+------------------------------|
    | Qruise     |      40.5 | Shai Machnes                  |                              |
    |------------+-----------+-------------------------------+------------------------------|
    | FZJ        |      26.0 | Felix: f.motzoi@fz-juelich.de |                              |
    |------------+-----------+-------------------------------+------------------------------|
    | TNO        |      21.3 | richard.versluis@tno.nl       |                              |
    |            |           | christiaan.hollemans@tno.nl   |                              |
    |------------+-----------+-------------------------------+------------------------------|
    | Wigner RCP |      10.0 | zimboras.zoltan@wigner.hu     | rakyta.peter@wigner.mta.hu   |
    |            |           |                               | szendrak.erika@wigner.mta.hu |
    |------------+-----------+-------------------------------+------------------------------|

** WP 7 /Application & Test Suite/
*** Task 7.3 /Verification & Validation/
**** Task Outline
***** Task Description

   From the Grant Agreement

   #+BEGIN_QUOTE
      _Task 7.3: Verification and Validation_

      (Partners involved: UTartu*, UPV/EHU, CHALMERS, FZJ, Qruise, Duration: month 1-42)

      The levels of the enabling software stack communicate via interfaces.  This task is concerned with (a)
      *validating* that the top-level interfaces meet the requirements for application quantum software, including
      quantum gates/circuits with fault tolerance, and (b) *verifying* that the implementations match the
      specifications.  CHALMERS and UPV/EHU will do (a) as /part of their development of application software/ as
      part of the test suite in Tasks 7.1 and 7.2., scheduling it to match the timelines for those tasks.  The
      results of Task 7.3 will be applied at *test nodes* in Task 1.2.  FZJ, Qruise, and UTartu will /develop
      methodology/ for verifying the correctness of the implementations (D7.3 in M42; candidate methods will be
      identified by M6, implementation and validation of the software will begin before M24).  For levels of the
      software stack that link classical input to classical output (e.g., optimization phases in the quantum
      compiler), /quantum simulation/ will be deployed (see Task 7.5).  For the levels of the software stack that
      directly communicate with the control hardware, process tomography and randomized benchmarking, *et cetera*,
      will be used.  CHALMERS will assist with state and process tomography.
   #+END_QUOTE
***** Components

    * Validation (UPV/EHU, CHALMERS)
    * Verification (FZJ, Qruise, UTartu)

***** Relies on

    | Key | Name                                                                      | Respo. | Start |  Dead |
    |-----+---------------------------------------------------------------------------+--------+-------+-------|
    | M7  | User reqs, system specs & breakdown based on plans, interface defs agreed | Orange | 24-01 | 24-02 |

***** Output

    | Key  | Name                                                           |      Start |       Dead |
    |------+----------------------------------------------------------------+------------+------------|
    | O7.3 | Develop protocols, software for verif.+valid. of full QC stack |        n/a |        n/a |
    | M24  | Consensus of interface specifications for verification         | 2026-01-01 | 2026-02-28 |
    | D7.3 | Methodology for verifying the quantum stack                    | 2026-07-01 | 2026-08-31 |

***** Contributing partners

      | Partner    | Total PMs |
      |            | in WP7    |
      |------------+-----------|
      | _UTartu_   | 36        |
      | FZJ        | 70        |
      | CHALMERS   | 54        |
      | UPV/EHU    | 38        |
      | Qruise     | 0         |

*** Sub-task 7.4.1 /Generic simulator with simple noise models/
**** Task description

      From Grant Agreement: (highlight & paragraph break mine):

      #+BEGIN_QUOTE
      *UTartu* will *make the cuQuantum* or QuEST quantum-circuit simulator *available* to OpenSuperQPlus100
      partners and *add noise models from OpenSuperQPlus100 hardware*.

      CHALMERS will survey alternative quantum-circuit simulators. Wigner RCP will create infrastructure for
      testing of sampling algorithms and quantum-kernel-based algorithms, using FPGA-based dataflow engines.
      #+END_QUOTE

*** Sub-task 7.5.1 /HPC connection/
**** Task description
      #+BEGIN_QUOTE
      HPC methods will play a key role in enabling testing and use of quantum computers, both for simulation of
      them (Task 7.4) and as part of hybrid quantum-classical algorithms (Task 7.1).  This task will be aligned
      with the NordIQuEst and EuroHPC projects; CHALMERS and UTartu will be liaisons to NordIQuEst, and FZJ and
      CHALMERS will be liaisons to EuroHPC.

      *UTartu will integrate quantum-circuit simulator software with HPC APIs*.

      CHALMERS, *UTartu*, and Wigner RCP will develop *HPC circuit-optimization tools*.

      FZJ and CHALMERS will develop tools for hybrid quantum algorithms (VQAs) with possible extensions to
      multi-HPC - multi-QC systems.
      #+END_QUOTE

      * ¬ªThe techniques and their impact on other tasks will be described in a report (D7.5).¬´
      * Due: 2026-08-31


* Meetings & Reports
** Budapest 2024-06
*** Organizational notes

      *Every minute spent on this project is wasted time.*

*** DONE Preparation for WP5
      * /¬ªshort *presentation* (no more than 8-10 minutes please) to bring everybody up to speed on your
        institute's WP5 contributions.¬´/

      * From other funding sources: Started work on
        + Review of existing IRs for lattice surgery
        + Review of existing MLIR-for-quantum compiler technology
        + Create MLIR-based lattice surgery IR
        + Create MLIR-based quantum-classical low-level IR ("Pauli Assembler")
        + Develop lattice surgery compiler.

*** [3/3] Preparation for WP7
      * [X] Presentation about Task 7.3
      * [X] 1 slide for sub-task 7.4.1
      * [X] 1 slide for sub-task 7.5.1


* End Of File
# Local Variables:
# fill-column: 115
# End:
